// <auto-generated />
using System;
using Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Api.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210821030057_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Api.Models.Discipline", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<Guid>("TeacherId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("TeacherId");

                    b.ToTable("Disciplines");

                    b.HasData(
                        new
                        {
                            Id = new Guid("240cf246-08d7-4bc9-988c-8ee543b5ac85"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Matemática",
                            TeacherId = new Guid("85d9ecd9-91d8-46b3-a25a-1c70509d4942"),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("28641b47-997e-4b67-9819-2a0011e05f87"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Física",
                            TeacherId = new Guid("c4df4c57-c76c-4fe6-b187-5d7d0b3d88d6"),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("845305d3-c495-47cd-afb1-692b41b7e11a"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Português",
                            TeacherId = new Guid("85e304e1-cad5-4a64-954a-0b24a50199cd"),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("e5c4d02a-5282-4141-86e7-aec4965210e6"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Inglês",
                            TeacherId = new Guid("059773e6-5852-40ec-acd4-275a6badcc6d"),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("33cb295e-ba54-4812-8250-d76d7c2b5e03"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Programação",
                            TeacherId = new Guid("faf4e3c5-bd4a-4ef6-9280-2569e8e60b37"),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Api.Models.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Lastname")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ddcd8f2c-6b9c-4a85-b254-6241741f6a28"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Lastname = "Kent",
                            Name = "Marta",
                            Phone = "33225555",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("f58d0279-1ae7-4689-a789-0e58100cca9a"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Lastname = "Isabela",
                            Name = "Paula",
                            Phone = "3354288",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("5394b62e-4e6b-4f85-baa8-4447e3effdfb"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Lastname = "Antonia",
                            Name = "Laura",
                            Phone = "55668899",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("2153d556-8c74-46fa-a039-e753de73fe6b"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Lastname = "Maria",
                            Name = "Luiza",
                            Phone = "6565659",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("dbafdeb2-c93f-4b47-b738-4b91e0b59a12"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Lastname = "Machado",
                            Name = "Lucas",
                            Phone = "565685415",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("985b908a-4d24-463a-bc97-ef1e83f3b094"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Lastname = "Alvares",
                            Name = "Pedro",
                            Phone = "456454545",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("51e6da48-4097-4c73-a042-7228c71e3e47"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Lastname = "José",
                            Name = "Paulo",
                            Phone = "9874512",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Api.Models.StudentsDiscipline", b =>
                {
                    b.Property<Guid>("StudentId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("DisciplineId")
                        .HasColumnType("uuid");

                    b.HasKey("StudentId", "DisciplineId");

                    b.HasIndex("DisciplineId");

                    b.ToTable("StudentsDisciplines");

                    b.HasData(
                        new
                        {
                            StudentId = new Guid("ddcd8f2c-6b9c-4a85-b254-6241741f6a28"),
                            DisciplineId = new Guid("28641b47-997e-4b67-9819-2a0011e05f87")
                        },
                        new
                        {
                            StudentId = new Guid("ddcd8f2c-6b9c-4a85-b254-6241741f6a28"),
                            DisciplineId = new Guid("e5c4d02a-5282-4141-86e7-aec4965210e6")
                        },
                        new
                        {
                            StudentId = new Guid("ddcd8f2c-6b9c-4a85-b254-6241741f6a28"),
                            DisciplineId = new Guid("33cb295e-ba54-4812-8250-d76d7c2b5e03")
                        },
                        new
                        {
                            StudentId = new Guid("f58d0279-1ae7-4689-a789-0e58100cca9a"),
                            DisciplineId = new Guid("240cf246-08d7-4bc9-988c-8ee543b5ac85")
                        },
                        new
                        {
                            StudentId = new Guid("f58d0279-1ae7-4689-a789-0e58100cca9a"),
                            DisciplineId = new Guid("28641b47-997e-4b67-9819-2a0011e05f87")
                        },
                        new
                        {
                            StudentId = new Guid("f58d0279-1ae7-4689-a789-0e58100cca9a"),
                            DisciplineId = new Guid("33cb295e-ba54-4812-8250-d76d7c2b5e03")
                        },
                        new
                        {
                            StudentId = new Guid("5394b62e-4e6b-4f85-baa8-4447e3effdfb"),
                            DisciplineId = new Guid("240cf246-08d7-4bc9-988c-8ee543b5ac85")
                        },
                        new
                        {
                            StudentId = new Guid("5394b62e-4e6b-4f85-baa8-4447e3effdfb"),
                            DisciplineId = new Guid("28641b47-997e-4b67-9819-2a0011e05f87")
                        },
                        new
                        {
                            StudentId = new Guid("5394b62e-4e6b-4f85-baa8-4447e3effdfb"),
                            DisciplineId = new Guid("845305d3-c495-47cd-afb1-692b41b7e11a")
                        },
                        new
                        {
                            StudentId = new Guid("2153d556-8c74-46fa-a039-e753de73fe6b"),
                            DisciplineId = new Guid("240cf246-08d7-4bc9-988c-8ee543b5ac85")
                        },
                        new
                        {
                            StudentId = new Guid("2153d556-8c74-46fa-a039-e753de73fe6b"),
                            DisciplineId = new Guid("e5c4d02a-5282-4141-86e7-aec4965210e6")
                        },
                        new
                        {
                            StudentId = new Guid("2153d556-8c74-46fa-a039-e753de73fe6b"),
                            DisciplineId = new Guid("33cb295e-ba54-4812-8250-d76d7c2b5e03")
                        },
                        new
                        {
                            StudentId = new Guid("dbafdeb2-c93f-4b47-b738-4b91e0b59a12"),
                            DisciplineId = new Guid("e5c4d02a-5282-4141-86e7-aec4965210e6")
                        },
                        new
                        {
                            StudentId = new Guid("dbafdeb2-c93f-4b47-b738-4b91e0b59a12"),
                            DisciplineId = new Guid("33cb295e-ba54-4812-8250-d76d7c2b5e03")
                        },
                        new
                        {
                            StudentId = new Guid("dbafdeb2-c93f-4b47-b738-4b91e0b59a12"),
                            DisciplineId = new Guid("240cf246-08d7-4bc9-988c-8ee543b5ac85")
                        },
                        new
                        {
                            StudentId = new Guid("985b908a-4d24-463a-bc97-ef1e83f3b094"),
                            DisciplineId = new Guid("28641b47-997e-4b67-9819-2a0011e05f87")
                        },
                        new
                        {
                            StudentId = new Guid("985b908a-4d24-463a-bc97-ef1e83f3b094"),
                            DisciplineId = new Guid("845305d3-c495-47cd-afb1-692b41b7e11a")
                        },
                        new
                        {
                            StudentId = new Guid("985b908a-4d24-463a-bc97-ef1e83f3b094"),
                            DisciplineId = new Guid("e5c4d02a-5282-4141-86e7-aec4965210e6")
                        },
                        new
                        {
                            StudentId = new Guid("51e6da48-4097-4c73-a042-7228c71e3e47"),
                            DisciplineId = new Guid("240cf246-08d7-4bc9-988c-8ee543b5ac85")
                        },
                        new
                        {
                            StudentId = new Guid("51e6da48-4097-4c73-a042-7228c71e3e47"),
                            DisciplineId = new Guid("28641b47-997e-4b67-9819-2a0011e05f87")
                        },
                        new
                        {
                            StudentId = new Guid("51e6da48-4097-4c73-a042-7228c71e3e47"),
                            DisciplineId = new Guid("845305d3-c495-47cd-afb1-692b41b7e11a")
                        });
                });

            modelBuilder.Entity("Api.Models.Teacher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("85d9ecd9-91d8-46b3-a25a-1c70509d4942"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Lauro",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("c4df4c57-c76c-4fe6-b187-5d7d0b3d88d6"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Roberto",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("85e304e1-cad5-4a64-954a-0b24a50199cd"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Ronaldo",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("059773e6-5852-40ec-acd4-275a6badcc6d"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Rodrigo",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("faf4e3c5-bd4a-4ef6-9280-2569e8e60b37"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Alexandre",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Api.Models.Discipline", b =>
                {
                    b.HasOne("Api.Models.Teacher", "Teacher")
                        .WithMany("Disciplines")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("Api.Models.StudentsDiscipline", b =>
                {
                    b.HasOne("Api.Models.Discipline", "Discipline")
                        .WithMany("StudentsDisciplines")
                        .HasForeignKey("DisciplineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Api.Models.Student", "Student")
                        .WithMany("StudentsDisciplines")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Discipline");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Api.Models.Discipline", b =>
                {
                    b.Navigation("StudentsDisciplines");
                });

            modelBuilder.Entity("Api.Models.Student", b =>
                {
                    b.Navigation("StudentsDisciplines");
                });

            modelBuilder.Entity("Api.Models.Teacher", b =>
                {
                    b.Navigation("Disciplines");
                });
#pragma warning restore 612, 618
        }
    }
}
